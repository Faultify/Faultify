{"Name":"MyMutationProject","TestProjects":[{"Name":"Faultify.Benchmark.NUnit.dll","Tests":[{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestAddition","Mutations":[{"Name":"Arithmetic Analyzer","FullName":"Analyzer that searches for possible arithmetic mutations such as \u0027\u002B\u0027 to \u0027-\u0027, \u0027*\u0027, \u0027/\u0027, and \u0027%\u0027.","MutationResults":[{"Name":"Change operator from: \u0027add\u0027 to: \u0027sub\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n","MutatedSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027add\u0027 to: \u0027mul\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n","MutatedSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027add\u0027 to: \u0027div\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n","MutatedSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027add\u0027 to: \u0027rem\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n","MutatedSource":"public int Addition(int lhs, int rhs)\r\n{\r\n\treturn lhs % rhs;\r\n}\r\n"}],"MutationsSurvived":0,"MutationsKilled":4,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":0,"TotalMutationsKilledMutation":4,"TotalMutation":4}],"MutationsSurvived":0,"MutationsKilled":4,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":0,"TotalMutationsKilledResult":4,"TotalResult":4},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestSubtraction","Mutations":[{"Name":"Arithmetic Analyzer","FullName":"Analyzer that searches for possible arithmetic mutations such as \u0027\u002B\u0027 to \u0027-\u0027, \u0027*\u0027, \u0027/\u0027, and \u0027%\u0027.","MutationResults":[{"Name":"Change operator from: \u0027sub\u0027 to: \u0027add\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n","MutatedSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027sub\u0027 to: \u0027mul\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n","MutatedSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027sub\u0027 to: \u0027div\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n","MutatedSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027sub\u0027 to: \u0027rem\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n","MutatedSource":"public int Subtraction(int lhs, int rhs)\r\n{\r\n\treturn lhs % rhs;\r\n}\r\n"}],"MutationsSurvived":2,"MutationsKilled":2,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":2,"TotalMutationsKilledMutation":2,"TotalMutation":4}],"MutationsSurvived":2,"MutationsKilled":2,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":2,"TotalMutationsKilledResult":2,"TotalResult":4},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestMultiplication","Mutations":[{"Name":"Arithmetic Analyzer","FullName":"Analyzer that searches for possible arithmetic mutations such as \u0027\u002B\u0027 to \u0027-\u0027, \u0027*\u0027, \u0027/\u0027, and \u0027%\u0027.","MutationResults":[{"Name":"Change operator from: \u0027mul\u0027 to: \u0027add\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n","MutatedSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027mul\u0027 to: \u0027sub\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n","MutatedSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027mul\u0027 to: \u0027div\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n","MutatedSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027mul\u0027 to: \u0027rem\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n","MutatedSource":"public int Multiplication(int lhs, int rhs)\r\n{\r\n\treturn lhs % rhs;\r\n}\r\n"}],"MutationsSurvived":1,"MutationsKilled":3,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":1,"TotalMutationsKilledMutation":3,"TotalMutation":4}],"MutationsSurvived":1,"MutationsKilled":3,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":1,"TotalMutationsKilledResult":3,"TotalResult":4},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestDivision","Mutations":[{"Name":"Arithmetic Analyzer","FullName":"Analyzer that searches for possible arithmetic mutations such as \u0027\u002B\u0027 to \u0027-\u0027, \u0027*\u0027, \u0027/\u0027, and \u0027%\u0027.","MutationResults":[{"Name":"Change operator from: \u0027div\u0027 to: \u0027add\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027div\u0027 to: \u0027sub\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027div\u0027 to: \u0027mul\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027div\u0027 to: \u0027rem\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Division(int lhs, int rhs)\r\n{\r\n\treturn lhs % rhs;\r\n}\r\n"}],"MutationsSurvived":1,"MutationsKilled":3,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":1,"TotalMutationsKilledMutation":3,"TotalMutation":4}],"MutationsSurvived":1,"MutationsKilled":3,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":1,"TotalMutationsKilledResult":3,"TotalResult":4},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestModulo","Mutations":[{"Name":"Arithmetic Analyzer","FullName":"Analyzer that searches for possible arithmetic mutations such as \u0027\u002B\u0027 to \u0027-\u0027, \u0027*\u0027, \u0027/\u0027, and \u0027%\u0027.","MutationResults":[{"Name":"Change operator from: \u0027div\u0027 to: \u0027add\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs \u002B rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027div\u0027 to: \u0027sub\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs - rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027div\u0027 to: \u0027mul\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs * rhs;\r\n}\r\n"},{"Name":"Change operator from: \u0027div\u0027 to: \u0027rem\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs / rhs;\r\n}\r\n","MutatedSource":"public int Modulo(int lhs, int rhs)\r\n{\r\n\treturn lhs % rhs;\r\n}\r\n"}],"MutationsSurvived":2,"MutationsKilled":2,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":2,"TotalMutationsKilledMutation":2,"TotalMutation":4}],"MutationsSurvived":2,"MutationsKilled":2,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":2,"TotalMutationsKilledResult":2,"TotalResult":4},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestWhileLoop","Mutations":[{"Name":"Arithmetic Analyzer","FullName":"Analyzer that searches for possible arithmetic mutations such as \u0027\u002B\u0027 to \u0027-\u0027, \u0027*\u0027, \u0027/\u0027, and \u0027%\u0027.","MutationResults":[{"Name":"Change operator from: \u0027add\u0027 to: \u0027sub\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int WhileLoop(int loops)\r\n{\r\n\tint i;\r\n\tfor (i = 0; i \u003C loops; i\u002B\u002B)\r\n\t{\r\n\t}\r\n\treturn i;\r\n}\r\n","MutatedSource":"public int WhileLoop(int loops)\r\n{\r\n\tint num;\r\n\tfor (num = 0; num \u003C loops; num--)\r\n\t{\r\n\t}\r\n\treturn num;\r\n}\r\n"},{"Name":"Change operator from: \u0027add\u0027 to: \u0027mul\u0027.","Status":2,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int WhileLoop(int loops)\r\n{\r\n\tint i;\r\n\tfor (i = 0; i \u003C loops; i\u002B\u002B)\r\n\t{\r\n\t}\r\n\treturn i;\r\n}\r\n","MutatedSource":"public int WhileLoop(int loops)\r\n{\r\n\tint num;\r\n\tfor (num = 0; num \u003C loops; num *= 1)\r\n\t{\r\n\t}\r\n\treturn num;\r\n}\r\n"}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":1,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":0,"TotalMutationsKilledMutation":2,"TotalMutation":2},{"Name":"Comparison Analyzer","FullName":"Analyzer that searches for possible comparison mutations to invalidate a condition such as \u0027\u003C\u0027 to \u0027\u003E\u0027.","MutationResults":[{"Name":"Change operator from: \u0027clt\u0027 to: \u0027cgt\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public int WhileLoop(int loops)\r\n{\r\n\tint i;\r\n\tfor (i = 0; i \u003C loops; i\u002B\u002B)\r\n\t{\r\n\t}\r\n\treturn i;\r\n}\r\n","MutatedSource":"public int WhileLoop(int loops)\r\n{\r\n\tint num;\r\n\tfor (num = 0; num \u003E loops; num *= 1)\r\n\t{\r\n\t}\r\n\treturn num;\r\n}\r\n"}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":0,"TotalMutationsKilledMutation":1,"TotalMutation":1}],"MutationsSurvived":0,"MutationsKilled":2,"MutationsTimedOut":1,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":0,"TotalMutationsKilledResult":3,"TotalResult":3},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestForLoop","Mutations":[{"Name":"Arithmetic Analyzer","FullName":"Analyzer that searches for possible arithmetic mutations such as \u0027\u002B\u0027 to \u0027-\u0027, \u0027*\u0027, \u0027/\u0027, and \u0027%\u0027.","MutationResults":[{"Name":"Change operator from: \u0027add\u0027 to: \u0027sub\u0027.","Status":2,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"using System;\r\n\r\npublic void ForLoop(int loops)\r\n{\r\n\tfor (int i = 0; i \u003C loops; i\u002B\u002B)\r\n\t{\r\n\t\tConsole.WriteLine();\r\n\t}\r\n}\r\n","MutatedSource":"using System;\r\n\r\npublic void ForLoop(int loops)\r\n{\r\n\tfor (int num = 0; num \u003C loops; num--)\r\n\t{\r\n\t\tConsole.WriteLine();\r\n\t}\r\n}\r\n"}],"MutationsSurvived":0,"MutationsKilled":0,"MutationsTimedOut":1,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":0,"TotalMutationsKilledMutation":1,"TotalMutation":1},{"Name":"Comparison Analyzer","FullName":"Analyzer that searches for possible comparison mutations to invalidate a condition such as \u0027\u003C\u0027 to \u0027\u003E\u0027.","MutationResults":[{"Name":"Change operator from: \u0027clt\u0027 to: \u0027cgt\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"using System;\r\n\r\npublic void ForLoop(int loops)\r\n{\r\n\tfor (int i = 0; i \u003C loops; i\u002B\u002B)\r\n\t{\r\n\t\tConsole.WriteLine();\r\n\t}\r\n}\r\n","MutatedSource":"using System;\r\n\r\npublic void ForLoop(int loops)\r\n{\r\n\tfor (int num = 0; num \u003E loops; num--)\r\n\t{\r\n\t\tConsole.WriteLine();\r\n\t}\r\n}\r\n"}],"MutationsSurvived":1,"MutationsKilled":0,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":1,"TotalMutationsKilledMutation":0,"TotalMutation":1}],"MutationsSurvived":1,"MutationsKilled":0,"MutationsTimedOut":1,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":1,"TotalMutationsKilledResult":1,"TotalResult":2},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestMoreThan","Mutations":[{"Name":"Comparison Analyzer","FullName":"Analyzer that searches for possible comparison mutations to invalidate a condition such as \u0027\u003C\u0027 to \u0027\u003E\u0027.","MutationResults":[{"Name":"Change operator from: \u0027cgt\u0027 to: \u0027clt\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public bool MoreThan(int lhs, int rhs)\r\n{\r\n\tif (lhs \u003E rhs)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n","MutatedSource":"public bool MoreThan(int lhs, int rhs)\r\n{\r\n\tif (lhs \u003C rhs)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n"}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":0,"TotalMutationsKilledMutation":1,"TotalMutation":1}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":0,"TotalMutationsKilledResult":1,"TotalResult":1},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestLessThan","Mutations":[{"Name":"Comparison Analyzer","FullName":"Analyzer that searches for possible comparison mutations to invalidate a condition such as \u0027\u003C\u0027 to \u0027\u003E\u0027.","MutationResults":[{"Name":"Change operator from: \u0027clt\u0027 to: \u0027cgt\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public bool LessThan(int lhs, int rhs)\r\n{\r\n\tif (lhs \u003C rhs)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n","MutatedSource":"public bool LessThan(int lhs, int rhs)\r\n{\r\n\tif (lhs \u003E rhs)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n"}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":0,"TotalMutationsKilledMutation":1,"TotalMutation":1}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":0,"TotalMutationsKilledResult":1,"TotalResult":1},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestLogicalAnd","Mutations":[{"Name":"Comparison Analyzer","FullName":"Analyzer that searches for possible comparison mutations to invalidate a condition such as \u0027\u003C\u0027 to \u0027\u003E\u0027.","MutationResults":[{"Name":"Change operator from: \u0027ceq\u0027 to: \u0027clt\u0027.","Status":1,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public bool LogicalAnd(int lhs, int rhs)\r\n{\r\n\tif (lhs == 0 \u0026\u0026 rhs == 0)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n","MutatedSource":"public bool LogicalAnd(int lhs, int rhs)\r\n{\r\n\tif (lhs == 0 \u0026\u0026 rhs \u003C 0)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n"}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":0,"TotalMutationsKilledMutation":1,"TotalMutation":1}],"MutationsSurvived":0,"MutationsKilled":1,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":0,"TotalMutationsKilledResult":1,"TotalResult":1},{"Name":"Faultify.Benchmark.Nunit.BenchmarkNUnit.TestLogicalOr","Mutations":[{"Name":"Comparison Analyzer","FullName":"Analyzer that searches for possible comparison mutations to invalidate a condition such as \u0027\u003C\u0027 to \u0027\u003E\u0027.","MutationResults":[{"Name":"Change operator from: \u0027ceq\u0027 to: \u0027clt\u0027.","Status":0,"Description":null,"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"OriginalSource":"public bool LogicalOr(int lhs, int rhs)\r\n{\r\n\tif (lhs == 0 || rhs == 0)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n","MutatedSource":"public bool LogicalOr(int lhs, int rhs)\r\n{\r\n\tif (lhs == 0 || rhs \u003C 0)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n"}],"MutationsSurvived":1,"MutationsKilled":0,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedMutation":1,"TotalMutationsKilledMutation":0,"TotalMutation":1}],"MutationsSurvived":1,"MutationsKilled":0,"MutationsTimedOut":0,"MutationsNoCoverage":0,"TotalMutationsSurvivedResult":1,"TotalMutationsKilledResult":0,"TotalResult":1}],"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"MutationsSurvived":8,"MutationsKilled":19,"MutationsNoCoverage":0,"MutationsTimedOut":2,"TotalMutationsSurvivedProject":8,"TotalMutationsKilledProject":21,"TotalProject":29}],"Duration":{"Ticks":0,"Days":0,"Hours":0,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0,"TotalHours":0,"TotalMilliseconds":0,"TotalMinutes":0,"TotalSeconds":0},"TotalKilled":0,"TotalSurvived":0,"TotalNoCoverage":0,"TotalTimedOut":0,"TotalMutationsKilledRunResult":0,"TotalMutationsSurvivedRunResult":0,"Total":0,"Score":0,"ScoreAsInt":0,"ScoreString":null}